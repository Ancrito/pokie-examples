var u=Object.defineProperty;var g=(n,s,t)=>s in n?u(n,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[s]=t;var m=(n,s,t)=>(g(n,typeof s!="symbol"?s+"":s,t),t);import{b as h,S as G,f as d,i as f,e as F}from"./ui-a2dbac6f.js";import{V as C,a as k,L as W,b as p}from"./LinesDefinitionsFor5x3-9c0e6370.js";const c=class extends h{calculateWin(s,t){c.symbolsCombination=t,super.calculateWin(s,t)}getAllWinningSymbolsPositions(){const s=[];return Object.values(this.getWinningLines()).forEach(t=>{t.getPattern().forEach((e,a)=>{const l=t.getDefinition()[a];if(e){const y=c.symbolsCombination.getSymbols(a)[l];s.push({x:a,y:l,symbolId:y})}})}),Object.values(this.getWinningScatters()).forEach(t=>{t.getSymbolsPositions().forEach(([e,a])=>{const l=c.symbolsCombination.getSymbols(e)[a];s.push({x:e,y:a,symbolId:l})})}),s}};let b=c;m(b,"symbolsCombination");const i=class extends C{constructor(s,t,e){super(s,t,e),i.combinationsGenerator=t,i.winCalculator=e}play(){const s=this.getCreditsAmount();super.play();const t=i.winCalculator.getAllWinningSymbolsPositions();t.length>i.combinationsGenerator.getStickySymbols().length?(i.combinationsGenerator.setStickySymbols(t),this.setFreeGamesSum(this.getFreeGamesSum()+1)):i.combinationsGenerator.setStickySymbols([]),this.getFreeGamesSum()>0&&(this.setCreditsAmount(s),this.setFreeGamesBank(this.getWinAmount()),this.getFreeGamesNum()===0?this.setCreditsAmount(this.getCreditsAmount()-this.getWinAmount()):this.getFreeGamesNum()===this.getFreeGamesSum()&&this.setCreditsAmount(s+this.getFreeGamesBank()))}};let r=i;m(r,"combinationsGenerator"),m(r,"winCalculator");class A extends G{constructor(){super(...arguments);m(this,"stickySymbolsPositions",[])}setStickySymbols(t){this.stickySymbolsPositions=t}getStickySymbols(){return this.stickySymbolsPositions}generateSymbolsCombination(){const t=super.generateSymbolsCombination().toMatrix();return this.stickySymbolsPositions.forEach(e=>{t[e.x][e.y]=e.symbolId}),new d().fromMatrix(t)}}const o=new k;o.setLinesDefinitions(new W);o.setFreeGamesForScatters("S",3,0);o.setFreeGamesForScatters("S",4,0);o.setFreeGamesForScatters("S",5,0);const P=new A(o),w=new b(o),E=new r(o,P,w),x=E,L=new p,S=[];F(x,L,S);f(document.getElementById("ui"),S);
