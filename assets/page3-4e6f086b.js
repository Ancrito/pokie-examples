var N=Object.defineProperty;var A=(i,e,t)=>e in i?N(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var a=(i,e,t)=>(A(i,typeof e!="symbol"?e+"":e,t),t);import{P as W,L as w,d as L,b as k,W as v,g as B,S as E,h as c,i as O,e as x}from"./ui-a2dbac6f.js";import{a as q,L as C,V as I,b as M}from"./LinesDefinitionsFor5x3-9c0e6370.js";class R{constructor(e,t=2){a(this,"patterns");const s=[],g=2**e;for(let r=0;r<g;r++){const S=r.toString(2).padStart(e,"0").split("").map(Number);s.push(S)}this.patterns=s.filter(r=>r.reduce((n,S)=>S?++n:n)>=t)}toArray(){return[...this.patterns]}}class d{constructor(){a(this,"exactNumberOfFreeGames");a(this,"lastFreeGame",!1);a(this,"shouldHaveFreeBankAtEnd",!0)}canPlayNextSimulationRound(e){if(this.lastFreeGame){let t=!(e.getFreeGamesNum()===e.getFreeGamesSum()&&e.getFreeGamesSum());return this.shouldHaveFreeBankAtEnd&&e.getFreeGamesBank()===0&&(t=!0),!this.shouldHaveFreeBankAtEnd&&e.getFreeGamesBank()>0&&(t=!0),t}else return this.exactNumberOfFreeGames?e.getWonFreeGamesNumber()!==this.exactNumberOfFreeGames:!(e.getWonFreeGamesNumber()>0)}getExactNumberOfFreeGames(){return this.exactNumberOfFreeGames}setExactNumberOfFreeGames(e){this.exactNumberOfFreeGames=e}getLastFreeGame(){return this.lastFreeGame}setLastFreeGame(e){this.lastFreeGame=e}getShouldHaveFreeBankAtEnd(){return this.shouldHaveFreeBankAtEnd}setShouldHaveFreeBankAtEnd(e){this.shouldHaveFreeBankAtEnd=e}}class H extends q{constructor(){super();a(this,"normalSequences");a(this,"freeGamesSequences");a(this,"normalPatterns");a(this,"freeGamesPatterns");a(this,"freeGamesMode",!1);this.setCreditsAmount(1e4);const t=new W(this.getAvailableBets(),this.getAvailableSymbols(),this.getWildSymbols(),this.getReelsNumber());this.getAvailableSymbols().filter(s=>!this.isSymbolWild(s)).forEach(s=>{t.setPayoutForSymbol(s,2,1),t.setPayoutForSymbol(s,3,2),t.setPayoutForSymbol(s,4,3),t.setPayoutForSymbol(s,5,4)}),this.setPaytable(t),this.normalPatterns=new w(this.getReelsNumber(),2),this.freeGamesPatterns=new R(this.getReelsNumber(),2),this.setLinesDefinitions(new C),this.normalSequences=super.getSymbolsSequences().map(s=>new L().fromArray(s.toArray())),this.freeGamesSequences=super.getSymbolsSequences().map(s=>new L().fromArray(s.toArray()).removeAllSymbols(this.getScatterSymbols()[0]))}setFreeGamesMode(t){this.freeGamesMode=t}isFreeGamesMode(){return this.freeGamesMode}getSymbolsSequences(){return this.freeGamesMode?this.freeGamesSequences:this.normalSequences}getLinesPatterns(){return this.freeGamesMode?this.freeGamesPatterns:this.normalPatterns}}const o=class extends I{constructor(e,t,s){super(e,t,s),o.config=e}play(){super.play(),this.getFreeGamesSum()>0&&this.getFreeGamesNum()!==this.getFreeGamesSum()?o.config.setFreeGamesMode(!0):o.config.setFreeGamesMode(!1)}};let m=o;a(m,"config");const u=class extends k{constructor(t){super(t);a(this,"multipliedLines");a(this,"multipliedScatters");u.config=t}calculateWin(t,s){if(super.calculateWin(t,s),u.config.isFreeGamesMode()){const g=super.getWinningScatters();this.multipliedScatters={},Object.values(g).forEach(n=>this.multipliedScatters[n.getSymbolId()]=new v(n.getSymbolId(),n.getSymbolsPositions(),n.getWinAmount()*2));const r=super.getWinningLines();this.multipliedLines={},Object.values(r).forEach(n=>this.multipliedLines[n.getLineId()]=new B(n.getWinAmount()*2,n.getDefinition(),n.getPattern(),n.getLineId(),n.getSymbolsPositions(),n.getWildSymbolsPositions(),n.getSymbolId()))}else this.multipliedScatters=void 0,this.multipliedLines=void 0}getWinningLines(){return this.multipliedLines?this.multipliedLines:super.getWinningLines()}getWinningScatters(){return this.multipliedScatters?this.multipliedScatters:super.getWinningScatters()}};let l=u;a(l,"config");const h=new H,V=new E(h),j=new l(h),D=new m(h,V,j),f=new c;f.setNumberOfRounds(1/0);f.setPlayStrategy(new d);const b=new c;b.setNumberOfRounds(1/0);const y=new d;y.setLastFreeGame(!0);y.setShouldHaveFreeBankAtEnd(!0);b.setPlayStrategy(y);const F=new c;F.setNumberOfRounds(1/0);const G=new d;G.setLastFreeGame(!0);G.setShouldHaveFreeBankAtEnd(!1);F.setPlayStrategy(G);const p=new c;p.setNumberOfRounds(1/0);p.setPlayStrategy({canPlayNextSimulationRound:i=>!(Object.keys(i.getWinningLines()).length>0&&Object.keys(i.getWinningScatters()).length>0)});const z=D,T=new M,P=[["fg","Free games",f],["fgBank","Last free game with free bank",b],["fgNoBank","Last free game without free bank",F],["scLines","Lines and scatters",p]];x(z,T,P);O(document.getElementById("ui"),P);
