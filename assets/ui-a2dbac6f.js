var H=Object.defineProperty;var J=(o,e,t)=>e in o?H(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var r=(o,e,t)=>(J(o,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const l of i.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&n(l)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();class L{static getDefaultData(e){const t=e.getCreditsAmount(),n=e.getBet();return{credits:t,bet:n}}getInitialData(e){const t=e.getAvailableBets();return{...L.getDefaultData(e),availableBets:t}}getRoundData(e){return L.getDefaultData(e)}}class be{constructor(e=new L){r(this,"baseSerializer");this.baseSerializer=e}getInitialData(e){const t=e.getAvailableSymbols(),n=e.getReelsNumber(),s=e.getReelsSymbolsNumber(),i=e.getPaytable().toMap(),l={};return e.getLinesDefinitions().getLinesIds().forEach(a=>{l[a]=e.getLinesDefinitions().getLineDefinition(a)}),{...this.baseSerializer.getInitialData(e),...this.getRoundData(e),availableSymbols:t,reelsNumber:n,reelsSymbolsNumber:s,paytable:i,linesDefinitions:l}}getRoundData(e){const t=e.getSymbolsCombination(),n=e.getWinningLines(),s=e.getWinningScatters(),i={...this.baseSerializer.getRoundData(e),reelsSymbols:t.toMatrix()};return Object.keys(n).length>0&&(i.winningLines=Object.values(n).reduce((l,a)=>({...l,[a.getLineId()]:{definition:a.getDefinition(),pattern:a.getPattern(),symbolId:a.getSymbolId(),lineId:a.getLineId(),symbolsPositions:a.getSymbolsPositions(),wildSymbolsPositions:a.getWildSymbolsPositions(),winAmount:a.getWinAmount()}}),{})),Object.keys(s).length>0&&(i.winningScatters=Object.values(s).reduce((l,a)=>({...l,[a.getSymbolId()]:{symbolId:a.getSymbolId(),symbolsPositions:a.getSymbolsPositions(),winAmount:a.getWinAmount()}}),{})),i}}class U{constructor(e=new F,t=new V){r(this,"config");r(this,"winCalculator");r(this,"bet");r(this,"credits");this.config=e,this.winCalculator=t,this.bet=this.getInitialBet(),this.credits=e.getCreditsAmount()}getCreditsAmount(){return this.credits}setCreditsAmount(e){this.credits=e}getWinAmount(){return this.winCalculator.getWinAmount()}getAvailableBets(){return this.config.getAvailableBets()}getBet(){return this.bet}setBet(e){this.config.isBetAvailable(e)?this.bet=e:this.bet=this.getAvailableBets()[0]}canPlayNextGame(){return this.credits>=this.bet}play(){this.canPlayNextGame()&&(this.credits-=this.bet)}getInitialBet(){let e;return this.config.isBetAvailable(this.config.getBet())?e=this.config.getBet():e=this.config.getAvailableBets()[0],e}}class F{constructor(){r(this,"availableBets",[1,2,3,4,5,10,20,30,40,50,100]);r(this,"creditsAmount",1e3);r(this,"bet");this.bet=this.availableBets[0]}setAvailableBets(e){this.availableBets=[...e]}getAvailableBets(){return[...this.availableBets]}setCreditsAmount(e){this.creditsAmount=e}getCreditsAmount(){return this.creditsAmount}setBet(e){this.bet=e}getBet(){return this.bet}isBetAvailable(e){return this.getAvailableBets().includes(e)}}class V{getWinAmount(){return 0}}class Q{constructor(e=new F){r(this,"baseConfig");r(this,"reelsNumber");r(this,"reelsSymbolsNumber");r(this,"availableSymbols");r(this,"wilds");r(this,"reelsSymbolsSequences");r(this,"paytable");r(this,"scatters");r(this,"linesDefinitions");r(this,"linesPatterns");this.baseConfig=e,this.reelsNumber=5,this.reelsSymbolsNumber=3,this.availableSymbols=["A","K","Q","J","10","9","W","S"],this.wilds=["W"],this.paytable=new I(this.getAvailableBets(),this.availableSymbols.filter(t=>!this.isSymbolWild(t)),this.wilds,this.reelsNumber),this.scatters=["S"],this.linesDefinitions=new x(this.reelsNumber,this.reelsSymbolsNumber),this.linesPatterns=new j(this.reelsNumber),this.reelsSymbolsSequences=this.createReelsSymbolsSequences()}getPaytable(){return this.paytable}setPaytable(e){this.paytable=e}getWildSymbols(){return this.wilds}setWildSymbols(e){this.wilds=e}getScatterSymbols(){return this.scatters.slice()}setScatterSymbols(e){this.scatters=e.slice()}getLinesDefinitions(){return this.linesDefinitions}getLinesPatterns(){return this.linesPatterns}setLinesDefinitions(e){this.linesDefinitions=e}setLinesPatterns(e){this.linesPatterns=e}getReelsSymbolsNumber(){return this.reelsSymbolsNumber}setReelsSymbolsNumber(e){this.reelsSymbolsNumber=e,this.linesDefinitions=new x(this.reelsNumber,this.reelsSymbolsNumber)}getReelsNumber(){return this.reelsNumber}setReelsNumber(e){this.reelsNumber=e,this.linesDefinitions=new x(this.reelsNumber,this.reelsSymbolsNumber),this.linesPatterns=new j(this.reelsNumber)}getAvailableSymbols(){return this.availableSymbols.slice()}setAvailableSymbols(e){this.availableSymbols=e.slice(),this.paytable=new I(this.getAvailableBets(),this.availableSymbols.filter(t=>!this.isSymbolWild(t)),this.wilds,this.reelsNumber),this.reelsSymbolsSequences=this.createReelsSymbolsSequences()}getSymbolsSequences(){return this.reelsSymbolsSequences}setSymbolsSequences(e){this.reelsSymbolsSequences=e}isSymbolWild(e){return this.wilds.includes(e)}isSymbolScatter(e){return this.scatters.some(t=>t===e)}setAvailableBets(e){this.baseConfig.setAvailableBets(e.slice())}getAvailableBets(){return this.baseConfig.getAvailableBets().slice()}isBetAvailable(e){return this.baseConfig.isBetAvailable(e)}setCreditsAmount(e){this.baseConfig.setCreditsAmount(e)}getCreditsAmount(){return this.baseConfig.getCreditsAmount()}setBet(e){this.baseConfig.setBet(e)}getBet(){return this.baseConfig.getBet()}createReelsSymbolsSequences(){const e=[],t=new R,n=this.availableSymbols.filter(s=>!this.isSymbolScatter(s)&&!this.isSymbolWild(s));for(t.fromNumberOfEachSymbol(n,15),this.wilds.forEach(s=>t.addSymbol(s,5)),this.scatters.forEach(s=>t.addSymbol(s,3));t.getSymbolsStacksIndexes().some(s=>this.scatters.some(i=>i===t.getSymbol(s.index)));)t.shuffle();e.push(t);for(let s=1;s<this.reelsNumber;s++){const i=new R;i.fromArray(t.toArray()),e.push(i)}return e}}class he{constructor(e=new Q,t=new $(e),n=new Z(e),s=new U(e)){r(this,"baseSession");r(this,"config");r(this,"combinationsGenerator");r(this,"winCalculator");r(this,"winAmount",0);r(this,"symbolsCombination",new D);this.config=e,this.combinationsGenerator=t,this.winCalculator=n,this.baseSession=s,this.symbolsCombination=this.combinationsGenerator.generateSymbolsCombination()}getPaytable(){return this.config.getPaytable()}getSymbolsCombination(){return this.symbolsCombination}getWinningLines(){return this.winCalculator.getWinningLines()}getWinningScatters(){return this.winCalculator.getWinningScatters()}getSymbolsSequences(){return this.config.getSymbolsSequences()}getReelsSymbolsNumber(){return this.config.getReelsSymbolsNumber()}getReelsNumber(){return this.config.getReelsNumber()}getAvailableSymbols(){return[...this.config.getAvailableSymbols()]}getCreditsAmount(){return this.baseSession.getCreditsAmount()}setCreditsAmount(e){this.baseSession.setCreditsAmount(e)}getWinAmount(){return this.winAmount}getLinesWinning(){return this.winCalculator.getLinesWinning()}getScattersWinning(){return this.winCalculator.getScattersWinning()}getAvailableBets(){return[...this.config.getAvailableBets()]}getBet(){return this.baseSession.getBet()}setBet(e){this.baseSession.setBet(e)}canPlayNextGame(){return this.baseSession.canPlayNextGame()}play(){this.baseSession.play(),this.symbolsCombination=this.combinationsGenerator.generateSymbolsCombination(),this.winCalculator.calculateWin(this.getBet(),this.symbolsCombination),this.winAmount=this.winCalculator.getWinAmount(),this.setCreditsAmount(this.getCreditsAmount()+this.winAmount)}isSymbolWild(e){return this.config.isSymbolWild(e)}isSymbolScatter(e){return this.config.isSymbolScatter(e)}getWildSymbols(){return this.config.getWildSymbols()}getScatterSymbols(){return this.config.getScatterSymbols()}getLinesDefinitions(){return this.config.getLinesDefinitions()}getLinesPatterns(){return this.config.getLinesPatterns()}}class X{constructor(e,t,n,s,i,l,a){r(this,"winAmount");r(this,"definition");r(this,"pattern");r(this,"lineId");r(this,"symbolsPositions");r(this,"wildSymbolsPositions");r(this,"symbolId");this.winAmount=e,this.definition=[...t],this.pattern=[...n],this.lineId=s,this.symbolsPositions=[...i],this.wildSymbolsPositions=[...l],this.symbolId=a}getDefinition(){return[...this.definition]}getSymbolId(){return this.symbolId}getLineId(){return this.lineId}getSymbolsPositions(){return[...this.symbolsPositions]}getWildSymbolsPositions(){return[...this.wildSymbolsPositions]}getWinAmount(){return this.winAmount}getPattern(){return this.pattern}}class Y{constructor(e,t,n){r(this,"symbolId");r(this,"symbolsPositions");r(this,"winAmount");this.symbolId=e,this.symbolsPositions=[...t],this.winAmount=n}getSymbolId(){return this.symbolId}getSymbolsPositions(){return[...this.symbolsPositions]}getWinAmount(){return this.winAmount}}class K{getRandomInt(e,t){return Math.floor(e+Math.random()*(t-e))}}class D{constructor(){r(this,"combination",[])}getSymbols(e){return this.combination[e]}fromMatrix(e,t=!1){return this.combination=JSON.parse(JSON.stringify(t?this.transposeArray(e):e)),this}toMatrix(e=!1){return JSON.parse(JSON.stringify(e?this.transposeArray(this.combination):this.combination))}transposeArray(e){const t=[];let n,s;for(n=0;n<e.length;n++)for(s=0;s<e[n].length;s++)t[s]===void 0&&(t[s]=[]),t[s][n]=e[n][s];return t}}class g{static getSymbolsForDefinition(e,t){return t.map((n,s)=>e[s][n])}static getSymbolsMatchingPattern(e,t){return e.filter((n,s)=>t[s]===1)}static isMatchPattern(e,t,n){const s=g.getSymbolsMatchingPattern(e,t);return Array.from(new Set(s)).filter(a=>!(n!=null&&n.some(c=>c===a))).length===1}static getWinningSymbolId(e,t,n){const s=g.getSymbolsMatchingPattern(e,t),i=new Set(s);let l=null;return i.forEach(a=>{n!=null&&n.some(c=>c===a)||(l=a)}),l}static getMatchingPattern(e,t,n){for(const s of t)if(g.isMatchPattern(e,s,n))return s;return null}static getWildSymbolsPositions(e,t,n){return e.map((s,i)=>n.some(l=>s===l)&&t[i]===1?i:-1).filter(s=>s!==-1)}static getScatterSymbolsPositions(e,t){const n=[];for(let s=0;s<e.length;s++)for(let i=0;i<e[s].length;i++)e[s][i]===t&&n.push([s,i]);return n}static getWinningLinesIds(e,t,n,s){const l=t.getLinesIds().filter(a=>{const c=g.getSymbolsForDefinition(e,t.getLineDefinition(a));return g.getMatchingPattern(c,n,s)!==null});return l.sort(),l}}class ${constructor(e,t=new K){r(this,"rng");r(this,"config");this.config=e,this.rng=t}generateSymbolsCombination(){const e=new Array(this.config.getReelsNumber());for(let t=0;t<this.config.getReelsNumber();t++)e[t]=this.getRandomReelSymbols(t);return new D().fromMatrix(e)}getRandomReelSymbols(e){const t=this.config.getSymbolsSequences()[e],n=this.rng.getRandomInt(0,t.getSize());return t.getSymbols(n,this.config.getReelsSymbolsNumber())}}class R{constructor(){r(this,"sequence");this.sequence=[]}setSymbol(e,t){return this.sequence.length===0?this.sequence=[t]:this.sequence[this.getIndex(e)]=t,this}setSymbols(e,t){return this.sequence.length<t.length?this.sequence=[...t]:t.forEach((n,s)=>this.setSymbol(e+s,n)),this}addSymbol(e,t,n){return n!==void 0&&n<this.sequence.length?this.sequence.splice(n,0,...Array(t||1).fill(e)):this.sequence.push(...Array(t||1).fill(e)),this}addSymbols(e,t){return t!==void 0&&t<this.sequence.length?this.sequence.splice(t,0,...e):this.sequence.push(...e),this}getSymbol(e){return this.sequence[this.getIndex(e)]}getSymbols(e,t){const n=[];let s=e;for(let i=0;i<t;i++)s=this.getIndex(s),n.push(this.getSymbol(s)),s++;return n}getSize(){return this.sequence.length}getNumberOfSymbols(e){return this.sequence.filter(t=>t===e).length}getSymbolWeight(e){return this.getNumberOfSymbols(e)/this.sequence.length*100}getSymbolsWeights(){const e={},t=[...new Set(this.sequence)];for(const n of t)e[n]=this.getSymbolWeight(n);return e}getSymbolsIndexes(e){const t=[];for(let n=0;n<this.sequence.length;n++)e.includes(this.sequence[n])&&t.push(n);return t}getSymbolsStacksIndexes(){const e=[],t=this.sequence.length;if(t>1&&new Set(this.sequence).size>1)for(let n=0;n<t;n++){let s=this.sequence[n],i=this.getIndex(n+1),l=this.sequence[i];if(s===l){const a={index:n,size:1};for(;s===l;)a.size++,n<this.sequence.length-1?n=i:e[0]&&e[0].index===0&&e.shift(),i=this.getIndex(i+1),s=this.sequence[n],l=this.sequence[i];e.push(a)}}return e}shuffle(){for(let e=this.sequence.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[this.sequence[e],this.sequence[t]]=[this.sequence[t],this.sequence[e]]}return this}fromArray(e){return this.sequence=[...e],this}fromSymbolsWeights(e,t=50){const n=[];for(const s in e)if(e[s]!==void 0){const i=Math.round(e[s]/100*t);n.push(...Array(i).fill(s))}return this.sequence=n,this}fromNumbersOfSymbols(e){const t=[];for(const n in e)e[n]!==void 0&&t.push(...Array(e[n]).fill(n));return this.sequence=t,this}fromNumberOfEachSymbol(e,t){const n=[];for(const s of e)n.push(...Array(t).fill(s));return this.sequence=n,this}toArray(){return[...this.sequence]}removeAllSymbols(e){return this.fromArray(this.toArray().filter(t=>t!==e))}removeSymbol(e){return this.sequence=this.sequence.filter((t,n)=>n!==e),this}getIndex(e){return e>=0?e%this.sequence.length:this.sequence.length-1-Math.abs(e+1)%this.sequence.length}}class x{constructor(e,t){r(this,"definitions",{});for(let n=0;n<t;n++){this.definitions[n]=[];for(let s=0;s<e;s++)this.definitions[n][s]=n}if(t===3){const n=[...this.definitions[0]];this.definitions[0]=[...this.definitions[1]],this.definitions[1]=n}}getLineDefinition(e){return this.definitions[e]}getLinesIds(){return Object.keys(this.definitions)}}class j{constructor(e,t=2){r(this,"patterns");this.patterns=new Array(e-(t-1));for(let n=0;n<e-(t-1);n++){const s=Array(e).fill(0);for(let i=0;i<e-n;i++)s[i]=1;this.patterns[n]=s}}toArray(){return[...this.patterns]}}class I{constructor(e,t,n,s){r(this,"paytableMap");this.paytableMap=I.createDefaultPaytableMap(e,t,n,s)}static createDefaultPaytableMap(e,t,n,s){const i={};for(const l of e)if(i[l]={},t){for(const a of t)if(!(n!=null&&n.some(c=>a===c))&&(i[l][a]={},s!==void 0))for(let c=3;c<=s;c++)i[l][a][c]=(c-2)*l}return i}getWinAmountForSymbol(e,t,n){let s=0;return this.paytableMap[n]&&this.paytableMap[n][e]&&this.paytableMap[n][e][t]&&(s=this.paytableMap[n][e][t]),s}getAvailableBets(){return Object.keys(this.paytableMap).map(e=>parseInt(e,10))}getNumbersOfSymbolsForBet(e,t){return Object.keys(this.paytableMap[e][t]).map(n=>parseInt(n,10))}toMap(){return JSON.parse(JSON.stringify(this.paytableMap))}getAvailableSymbolsForBet(e){return Object.keys(this.paytableMap[e])}setPayoutForSymbol(e,t,n,s){s!==void 0?this.paytableMap[s][e][t]=n*s:Object.keys(this.paytableMap).forEach(i=>{const l=parseInt(i,10);this.paytableMap[i]||(this.paytableMap[i]={}),this.paytableMap[i][e]||(this.paytableMap[i][e]={}),this.paytableMap[i][e][t]=n*l})}fromMap(e){return this.paytableMap=JSON.parse(JSON.stringify(e)),this}}class Z{constructor(e){r(this,"config");r(this,"symbolsCombination");r(this,"winningLines",{});r(this,"winningScatters",{});this.config=e}calculateWin(e,t){if(this.config.getAvailableBets().some(n=>n===e))this.symbolsCombination=t,this.calculateWinningLinesAndScatters(e);else throw new Error(`Bet ${e} is not specified at paytable`)}getWinningLines(){return this.winningLines}getWinningScatters(){return this.winningScatters}getWinAmount(){return this.getLinesWinning()+this.getScattersWinning()}getLinesWinning(){return Object.values(this.getWinningLines()).reduce((e,t)=>e+t.getWinAmount(),0)}getScattersWinning(){return Object.values(this.getWinningScatters()).reduce((e,t)=>e+t.getWinAmount(),0)}calculateWinningLinesAndScatters(e){let t;this.winningLines={},g.getWinningLinesIds(this.symbolsCombination.toMatrix(),this.config.getLinesDefinitions(),this.config.getLinesPatterns().toArray(),this.config.getWildSymbols()).forEach(s=>{t=this.generateWinningLine(e,s),!this.config.getScatterSymbols().some(i=>i===t.getSymbolId())&&t.getWinAmount()>0&&(this.winningLines[t.getLineId()]=t)}),this.winningScatters=this.generateWinningScatters(e)}generateWinningLine(e,t){const n=this.config.getLinesDefinitions().getLineDefinition(t),s=g.getSymbolsForDefinition(this.symbolsCombination.toMatrix(),n),i=g.getMatchingPattern(s,this.config.getLinesPatterns().toArray(),this.config.getWildSymbols()),l=i.reduce((y,b,f)=>(b===1&&y.push(f),y),[]),a=g.getWinningSymbolId(s,i,this.config.getWildSymbols()),c=g.getWildSymbolsPositions(s,i,this.config.getWildSymbols()),d=this.getWinAmountForSymbol(e,a,l.length);return new X(d,n,i,t,l,c,a)}getWinAmountForSymbol(e,t,n){return this.config.getPaytable().getWinAmountForSymbol(t,n,e)}generateWinningScatters(e){const t={};if(this.config.getScatterSymbols()!==null)for(const n of this.config.getScatterSymbols()){const s=n,i=this.getScatterSymbolsPositions(s),l=this.getWinAmountForSymbol(e,s,i.length);l>0&&(t[s]=new Y(s,i,l))}return t}getScatterSymbolsPositions(e){return g.getScatterSymbolsPositions(this.symbolsCombination.toMatrix(),e)}}class k{static allLinesHaveSameSymbolId(e){let t=null,n=!0;for(const s of e)if(t===null)t=s.getSymbolId();else if(e.length>1&&t!==s.getSymbolId()){n=!1;break}return n}static getLinesWithSymbol(e,t,n){const s=[];for(const i of e){const l=g.getSymbolsForDefinition(t,i.getDefinition());for(const a of l)if(a===n){s.push(i);break}}return s}static getLinesWithWinningSymbol(e,t){const n=[];for(const s of e)s.getSymbolId()===t&&n.push(s);return n}static getLinesWithDifferentWinningSymbols(e){const t=[],n=[];for(const s of e)t.indexOf(s.getSymbolId())<0&&(t.push(s.getSymbolId()),n.push(s));return n.length>1?n:[]}}class _{constructor(e,t){r(this,"session");r(this,"numberOfRounds");r(this,"changeBetStrategy");r(this,"playStrategy");r(this,"totalBet",0);r(this,"totalReturn",0);r(this,"rtp",0);r(this,"currentGameNumber",0);r(this,"beforePlayCallback");r(this,"afterPlayCallback");r(this,"onFinishedCallback");this.session=e,this.numberOfRounds=t.getNumberOfRounds(),this.changeBetStrategy=t.getChangeBetStrategy(),this.playStrategy=t.getPlayStrategy()}run(){let e;for(this.doPlay(),e=0;e<this.numberOfRounds-1&&this.canPlayNextGame();e++)this.doPlay();this.onFinished()}getRtp(){return this.rtp}getTotalBetAmount(){return this.totalBet}getTotalReturn(){return this.totalReturn}getCurrentGameNumber(){return this.currentGameNumber}getTotalGamesToPlayNumber(){return this.numberOfRounds}setBeforePlayCallback(e){this.beforePlayCallback=e}removeBeforePlayCallback(){this.beforePlayCallback=void 0}setAfterPlayCallback(e){this.afterPlayCallback=e}removeAfterPlayCallback(){this.afterPlayCallback=void 0}setOnFinishedCallback(e){this.onFinishedCallback=e}removeOnFinishedCallback(){this.onFinishedCallback=void 0}onFinished(){this.onFinishedCallback&&this.onFinishedCallback()}canPlayNextGame(){let e=this.session.canPlayNextGame();return e&&this.playStrategy&&(e=this.playStrategy.canPlayNextSimulationRound(this.session)),e}setBetBeforePlay(){this.changeBetStrategy&&this.changeBetStrategy.setBetForNextRound(this.session)}doPlay(){this.beforePlayCallback&&this.beforePlayCallback(),this.currentGameNumber++,this.setBetBeforePlay(),this.totalBet+=this.session.getBet(),this.session.play(),this.totalReturn+=this.session.getWinAmount(),this.calculateRtp(),this.afterPlayCallback&&this.afterPlayCallback()}calculateRtp(){this.rtp=this.totalReturn/this.totalBet}}const q=class{constructor(){r(this,"numberOfRounds",q.DEFAULT_NUMBER_OF_ROUNDS);r(this,"changeBetStrategy");r(this,"playStrategy")}setNumberOfRounds(e){this.numberOfRounds=e}getNumberOfRounds(){return this.numberOfRounds}setPlayStrategy(e){this.playStrategy=e}getPlayStrategy(){return this.playStrategy}setChangeBetStrategy(e){this.changeBetStrategy=e}getChangeBetStrategy(){return this.changeBetStrategy}};let A=q;r(A,"DEFAULT_NUMBER_OF_ROUNDS",1e3);class ee{canPlayNextSimulationRound(e){return e.getWinAmount()===0}}class te{constructor(e){r(this,"symbolId");r(this,"minLinesNumber",1);r(this,"onlySameSymbolId",!1);r(this,"allowWilds",!0);r(this,"wildSymbolId");r(this,"minNumberOfWinningSymbols");r(this,"exactNumberOfWinningSymbols");this.symbolId=e}canPlayNextSimulationRound(e){const t=e,n=t.getSymbolsCombination(),s=t.getWinningLines(),i=Object.values(s),l=t.getWinningScatters();let a;return e.isSymbolScatter(this.getSymbolId())?(a=Object.keys(l).length===0||Object.keys(s).length>0||!Object.keys(l).includes(this.getSymbolId()),Object.keys(l).includes(this.getSymbolId())&&(this.getMinNumberOfWinningSymbols()!==void 0&&l[this.getSymbolId()].getSymbolsPositions().length<this.getMinNumberOfWinningSymbols()&&(a=!0),this.getExactNumberOfWinningSymbols()!==void 0&&l[this.getSymbolId()].getSymbolsPositions().length!==this.getExactNumberOfWinningSymbols()&&(a=!0))):(a=Object.keys(s).length<this.getMinLinesNumber()||Object.keys(l).length>0||k.getLinesWithWinningSymbol(i,this.getSymbolId()).length===0||this.isOnlySameSymbolId()&&!k.allLinesHaveSameSymbolId(i)||!this.isAllowWilds()&&k.getLinesWithSymbol(i,n.toMatrix(),this.getWildSymbolId()).length>0,this.getMinNumberOfWinningSymbols()!==void 0&&!Object.values(s).some(c=>c.getSymbolsPositions().length>=this.getMinNumberOfWinningSymbols())&&(a=!0),this.getExactNumberOfWinningSymbols()!==void 0&&!Object.values(s).some(c=>c.getSymbolsPositions().length===this.getExactNumberOfWinningSymbols())&&(a=!0)),a}getSymbolId(){return this.symbolId}getMinLinesNumber(){return this.minLinesNumber}setMinLinesNumber(e){this.minLinesNumber=e}isOnlySameSymbolId(){return this.onlySameSymbolId}setOnlySameSymbolId(e){this.onlySameSymbolId=e}isAllowWilds(){return this.allowWilds}setAllowWilds(e,t){this.allowWilds=e,this.wildSymbolId=t}getWildSymbolId(){return this.wildSymbolId}setMinNumberOfWinningSymbols(e){this.minNumberOfWinningSymbols=e}getMinNumberOfWinningSymbols(){return this.minNumberOfWinningSymbols}setExactNumberOfWinningSymbols(e){this.exactNumberOfWinningSymbols=e}getExactNumberOfWinningSymbols(){return this.exactNumberOfWinningSymbols}}let w,O,N;const ge=(o,e,t)=>{w=o,O=e,N=t},ne=async()=>new Promise(o=>{o(O.getInitialData(w))}),se=async()=>new Promise(o=>{w.play(),o(O.getRoundData(w))}),ie=async(o,e)=>new Promise(t=>{w.play();const n=new A;n.setNumberOfRounds(1/0);const s=new te(o);s.setExactNumberOfWinningSymbols(e),n.setPlayStrategy(s),t(M(n))}),oe=async()=>new Promise(o=>{w.play();const e=new A;e.setNumberOfRounds(1/0);const t=new ee;e.setPlayStrategy(t),o(M(e))}),le=async o=>new Promise(e=>{const t=N==null?void 0:N.find(n=>n[0]===o);e(M(t[2]))}),M=o=>{const e=new _(w,o);return w.play(),e.run(),O.getRoundData(w)},G=(o,e,t,n,s,i)=>{s?document.getElementById("fgCounters").style.visibility="":document.getElementById("fgCounters").style.visibility="hidden";const l=document.getElementById("credits"),a=document.getElementById("bet"),c=document.getElementById("win");l.innerHTML="Credits: "+o,a.innerHTML="Bet: "+e,c.innerHTML="Win: "+t;const d=document.getElementById("fgNum"),y=document.getElementById("fgSum"),b=document.getElementById("fgBank");d.innerHTML="FG num: "+n,y.innerHTML="FG sum: "+s,b.innerHTML="FG bank: "+i},ae=(o,e,t)=>{for(;o.children.length>0;)o.removeChild(o.children[0]);e&&Object.keys(e).forEach(n=>{const s=e[n],i=document.createElement("div"),l=document.createElement("button");l.innerText="Line: "+n+", win: "+s.winAmount,l.className="btn btn-secondary btn-sm",i.style.paddingRight="20px",i.style.paddingBottom="20px",i.style.display="inline-block",i.appendChild(l),l.onmouseenter=()=>{s.pattern.forEach((a,c)=>{let d;const y=s.definition[c];s.symbolsPositions.includes(c)!==void 0&&a?d="#00FF00":d="#999999";const b=document.getElementById(y+":"+c);b.style.backgroundColor=d})},l.onmouseleave=()=>{s.definition.forEach((a,c)=>{const d=document.getElementById(a+":"+c);d.style.backgroundColor=d.baseColor})},o.appendChild(i)}),t&&Object.values(t).forEach(n=>{const s=document.createElement("div"),i=document.createElement("button");i.innerText="Scatter: "+n.symbolId+", win: "+n.winAmount,i.className="btn btn-secondary btn-sm",s.style.paddingRight="20px",s.style.paddingBottom="20px",s.style.display="inline-block",s.appendChild(i),i.onmouseenter=()=>{n.symbolsPositions.forEach(([l,a])=>{let c="#00FF00";const d=document.getElementById(a+":"+l);d.style.backgroundColor=c})},i.onmouseleave=()=>{n.symbolsPositions.forEach(([l,a])=>{const c=document.getElementById(a+":"+l);c.style.backgroundColor=c.baseColor})},o.appendChild(s)})},E=(o,e,t,n,s,i,l,a)=>{const c=document.getElementById("reels");T(o,c);let d=0;l&&Object.values(l).length>0&&(d=Object.values(l).reduce((b,f)=>b+f.winAmount,0)),a&&Object.values(a).length>0&&(d+=Object.values(a).reduce((b,f)=>b+f.winAmount,0)),G(t,e,d,n,s,i);const y=document.getElementById("winningLines");if(l&&Object.keys(l).length>0||a&&Object.keys(a).length>0){y.style.display="";const b=document.getElementById("winningLinesList");ae(b,l,a),l&&Object.keys(l).forEach(f=>{const C=l[f];C.symbolsPositions.forEach(W=>{const p=C.definition[W],u=document.getElementById(p+":"+W);u.style.backgroundColor="#DDFFDD",u.baseColor=u.style.backgroundColor})})}else y.style.display="none";a&&Object.keys(a).length>0&&Object.keys(a).forEach(b=>{a[b].symbolsPositions.forEach(([C,W])=>{const p=document.getElementById(W+":"+C);p.style.backgroundColor="#ffda00",p.baseColor=p.style.backgroundColor})})},T=(o,e)=>{for(;e.children.length>0;)e.removeChild(e.children[0]);new D().fromMatrix(o).toMatrix(!0).forEach((n,s)=>{const i=document.createElement("tr");i.className="reels-row",n.forEach((l,a)=>{const c=document.createElement("td");c.id=s+":"+a,c.className="reels-item",c.innerText=l,c.baseColor=c.style.backgroundColor,i.appendChild(c)}),e.appendChild(i)})},re=async()=>{document.getElementById("playButton").disabled="disabled";const o=await se();document.getElementById("playButton").disabled="",E(o.reelsSymbols,o.bet,o.credits,o.freeGamesNum,o.freeGamesSum,o.freeGamesBank,o.winningLines,o.winningScatters)},ce=async()=>{const o=await oe();E(o.reelsSymbols,o.bet,o.credits,o.freeGamesNum,o.freeGamesSum,o.freeGamesBank,o.winningLines,o.winningScatters)},ue=async(o,e)=>{const t=await ie(o,e);E(t.reelsSymbols,t.bet,t.credits,t.freeGamesNum,t.freeGamesSum,t.freeGamesBank,t.winningLines,t.winningScatters)},me=async o=>{const e=await le(o);E(e.reelsSymbols,e.bet,e.credits,e.freeGamesNum,e.freeGamesSum,e.freeGamesBank,e.winningLines,e.winningScatters)},ye=async(o,e)=>{const t=document.createElement("style");t.innerText=`
            .reels-row {
                height: 50px;
                background-color: #dddddd;
            }

            .reels-item {
                width: 115px;
                text-align: center;
                font-weight: bold;
                color: #444444;
                border: 3px solid white;
            }

            .paragraph {
                padding-top: 20px;
            }
    `,t.id="ui-style",document.getElementById("ui-style")||document.head.appendChild(t);const n=document.createElement("link");n.href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css",n.rel="stylesheet",n.integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC",n.crossOrigin="anonymous",n.id="bootstrap-link",document.getElementById("ui-link")||document.head.appendChild(n);const s=document.createElement("script");s.src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js",s.integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM",s.crossOrigin="anonymous",s.id="bootstrap-script",document.getElementById("bootstrap-script")||document.head.appendChild(s),o.className="container",o.style.width="600px",o.innerHTML=`
            <div class="paragraph">
                <table id="reels" class="reels"></table>
            </div>

            <div class="paragraph">
                <div style="display: flex; justify-content: center;">
                    <div id="credits" style="flex: 1; text-align: center;">Credits</div>
                    <div id="bet" style="flex: 1; text-align: center;">Bet</div>
                    <div id="win" style="flex: 1; text-align: center;">Win</div>
                </div>
                <div id="fgCounters" style="display: flex; justify-content: center;">
                    <div id="fgNum" style="flex: 1; text-align: center">FG num: 0</div>
                    <div id="fgSum" style="flex: 1; text-align: center">FG sum: 10</div>
                    <div id="fgBank" style="flex: 1; text-align: center">FG bank: 1000</div>
                </div>
            </div>

            <div class="paragraph">
                <div class="d-flex align-items-center gap-2">
                    <button id="playButton" type="button" class="btn btn-primary btn-lg">Play</button>
                    <button id="playWinButton" type="button" class="btn btn-primary btn-lg"">
                        Win
                    </button>
                    <div class="flex-grow-1"></div>
                    <div class="dropdown">
                        <a
                            class="btn btn-secondary dropdown-toggle"
                            href="#"
                            role="button"
                            id="dropdownMenuLink"
                            data-bs-toggle="dropdown"
                            aria-expanded="false"
                        >
                            Simulations
                        </a>
                        <ul id="dropDownList" class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                        </ul>
                    </div>
                </div>
            </div>

            
            <div class="paragraph" id="winningLines" style="display: none">
                <h4>Winning lines</h4>
                <div class="paragraph" id="winningLinesList"></div>
            </div>
            
            <div class="paragraph">
                <div class="accordion" id="accordionMath">
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingLinesDefinitions">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                    data-bs-target="#collapseLinesDefinitions" aria-expanded="true" aria-controls="collapseLinesDefinitions">
                                Lines definitions
                            </button>
                        </h2>
                        <div id="collapseLinesDefinitions" class="accordion-collapse collapse" aria-labelledby="headingLinesDefinitions"
                             data-bs-parent="#accordionMath">
                            <div id="linesDefinitionsList" class="accordion-body" >
                                
                            </div>
                        </div>
                    </div>
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="headingPaytable">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                    data-bs-target="#collapsePaytable" aria-expanded="true" aria-controls="collapsePaytable">
                                Paytable
                            </button>
                        </h2>
                        <div id="collapsePaytable" class="accordion-collapse collapse" aria-labelledby="headingPaytable"
                             data-bs-parent="#accordionMath">
                            <div class="accordion-body">
                                <table class="table">
                                    <thead>
                                    <tr id="paytableHead">
                                        <th scope="col">Symbol</th>
                                    </tr>
                                    </thead>
                                    <tbody id="paytableBody">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                <div>
            <div>
           
        `;const i=await ne(),l=document.getElementById("dropDownList"),a=i.paytable[10];Object.keys(a).forEach(u=>{const m=a[u];Object.keys(m).forEach(h=>{const v=parseInt(h,10),S=document.createElement("a");S.className="dropdown-item",S.innerText='Symbol "'+u+'" x '+h,S.onclick=()=>ue(u,v);const B=document.createElement("li");B.appendChild(S),l.appendChild(B)})}),document.getElementById("playButton").onclick=()=>re(),document.getElementById("playWinButton").onclick=()=>ce();const c=document.getElementById("reels");T(i.reelsSymbols,c);const d=i.winningLines;let y=0;d&&Object.keys(d).length>0&&(y=Object.values(d).reduce((u,m)=>u+m.winAmount,0)),G(i.credits,i.bet,y,i.freeGamesNum,i.freeGamesSum,i.freeGamesBank),e==null||e.forEach(u=>{const m=document.createElement("a");m.className="dropdown-item",m.innerText=u[1],m.id=`scenario-${u[0]}`;const h=document.createElement("li");h.appendChild(m),l.appendChild(h)}),document.querySelectorAll('[id^="scenario-"]').forEach(u=>{const m=u;m.onclick=()=>me(m.id.replace("scenario-",""))});const b=Object.values(i.paytable)[0],f=new Set;Object.values(b).forEach(u=>{Object.keys(u).forEach(m=>f.add(parseInt(m)))});const C=document.getElementById("paytableHead");f.forEach(u=>{const m=document.createElement("th");m.scope="col",m.innerText=u.toString(),C.appendChild(m)});const W=document.getElementById("paytableBody");Object.keys(b).forEach(u=>{const m=document.createElement("tr"),h=document.createElement("td");h.innerText=u,m.appendChild(h),f.forEach(v=>{const S=document.createElement("td");S.innerText=b[u][v]?b[u][v].toString():"",m.appendChild(S)}),W.appendChild(m)});const p=document.getElementById("linesDefinitionsList");for(;p.children.length>0;)p.removeChild(p.children[0]);Object.keys(i.linesDefinitions).forEach(u=>{const m=i.linesDefinitions[u],h=document.createElement("div"),v=document.createElement("button");v.innerText="Line: "+u,v.className="btn btn-secondary btn-sm",h.style.paddingRight="20px",h.style.paddingBottom="20px",h.style.display="inline-block",h.appendChild(v),v.onmouseenter=()=>{m.forEach((S,B)=>{const P="#999999",z=document.getElementById(S+":"+B);z.style.backgroundColor=P})},v.onmouseleave=()=>{m.forEach((S,B)=>{const P=document.getElementById(S+":"+B);P.style.backgroundColor=P.baseColor})},p.appendChild(h)})};export{j as L,I as P,$ as S,be as V,Y as W,Q as a,Z as b,he as c,R as d,ge as e,D as f,X as g,A as h,ye as i};
